package parser.grammar;

import java.util.ArrayList;
import java.util.List;

import lexer.TokenType;
import parser.grammar.GrammarRule;

import lexer.*;

public enum NonTerminal {
     SP_PROG,
     CLASS,
     ACCESS_MOD,
     NON_ACCESS_MOD,
     INHERIT,
     CLASS_INHERIT,
     INTERFACE_INHERIT,
     CLASS_BODY,
     SP_MAIN,
     SP_METHOD,
     FIELD,
     DATA_TYPE,
     PARAMETERS,
     PARAMETER,
     STATEMENTS,
     IDENTIFIER,
     START_CHAR,
     REST_CHARS,
     VALID_CHAR,
     LETTER,
     UPPERCASE,
     LOWERCASE,
     DIGIT,
     NON_ZERO,
     OPERATOR,
     ASSIGN_OP,
     ARITHMETIC_OP,
     LOG_OP,
     REL_OP,
     BIT_OP,
     PREFIX_OP,
     POSTFIX_OP,
     UNARY_OP,
     TERNARY_OP,
     METHOD_OP,
     OPERAND,
     LITERAL,
     NUMBER,
     INT_LIT,
     FLOAT_LIT,
     STR_LIT,
     CHAR_LIT,
     BOOL_LIT,
     DATE_LIT,
     FRAC_LIT,
     COMP_LIT,
     YEAR,
     MONTH,
     DAY,
     CHARACTER,
     SPECIAL_CHAR,
     EXPR,
     UNARY_EXPR,
     BINARY_EXPR,
     TERNARY_EXPR,
     CONDITION,
     SPEC_WORD,
     KEYWORD,
     RESERVED,
     FILTER_EXPR,
     VALIDATE_EXPR,
     INSPECT_BLOCK,
     DATE_FUNC,
     DATE_OBJ,
     DATE_OP,
     MODIFIY_BLOCK,
     QUERY_BLOCK,
     QUERY_STATEMENT,
     FROM_CLAUSE,
     FILTER_CLAUSE,
     SELECT_CLAUSE,
     EXPORT_EXPR,
     TOMIXED_EXPR,
     ALIAS_DEC,
     LAMBDA_EXPR,
     LAMBDA_BLOCK,
     DEC_STATE,
     SINGLE_DEC,
     MULTI_DEC,
     MULTI_IDENTIFIER,
     IN_STATE,
     PROMPT_STRING,
     OUT_STATE,
     STR,
     CON_STATE,
     IF_STMT,
     ELSE_STMT,
     SWITCH_STMT,
     CASES,
     ASS_STATE,
     ITER_STATE,
     FOR_LOOP,
     WHILE_LOOP,
     DO_WHILE_LOOP,
     ENHANCED_FOR;

}